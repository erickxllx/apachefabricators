---
import DynamicIcon from "@/helpers/DynamicIcon";
import Base from "@/layouts/Base.astro";
import PageHeader from "@/partials/PageHeader.astro";
import type { CollectionEntry } from "astro:content";
import { getEntry, render } from "astro:content";

const pricingIndex = (await getEntry(
  "pricing",
  "-index"
)) as CollectionEntry<"pricing">;
const { title, meta_title, description, image, bg_image, pricingTable } =
  pricingIndex.data;
const { Content } = await render(pricingIndex);
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}>
  <PageHeader title={title} meta_title={meta_title} bg_image={bg_image} />
  <section class="section">
    <div class="container">
      <div class="row gy-5 gx-4 pb-6">
        <div class="col-12">
          {
            pricingIndex.body && (
              <div class="content max-w-lg">{Content && <Content />}</div>
            )
          }
        </div>
        {
          pricingTable &&
            pricingTable.map((table) => (
              <div class="lg:col-4 md:col-6">
                <div class="border border-border pt-4 h-full rounded flex flex-col">
                  <div class="pt-2 px-7 border-b border-border rounded-0">
                    <h3
                      class="text-color mb-0 text-text-dark/80"
                      set:html={table.title}
                    />
                    <span class="ml-auto w-[50px] sm:w-[70px] h-[50px] sm:h-[70px] !leading-[50px] sm:!leading-[70px] border border-border text-center text-lg/none sm:text-2xl/none xl:text-4xl/none text-white bg-primary block rounded translate-y-4">
                      <DynamicIcon className="inline-block" icon={table.icon} />
                    </span>
                  </div>
                  <div class="pt-10 px-7">
                    {table.value && (
                      <span class="font-bold mb-3 block h2 text-text-dark">
                        {table.value}
                        <span class="h5 font-medium">/{table.unit}</span>
                      </span>
                    )}
                    {table.features && table.features[0] && (
                      <ul class="pl-0 mb-8 first:pt-0">
                        {table.features.map((feature) => (
                          <li class="text-color py-1.5 border-b border-border">
                            <DynamicIcon
                              icon="TfiArrowCircleRight"
                              className="me-3 text-primary inline-block"
                            />
                            {feature}
                          </li>
                        ))}
                      </ul>
                    )}
                  </div>
                  {table.link && (
                    <div class="border-0 py-0 px-7 mt-auto">
                      <a
                        href={table.link}
                        class="btn btn-primary translate-y-6"
                        set:html="Buy Now"
                      />
                    </div>
                  )}
                </div>
              </div>
            ))
        }
      </div>
    </div>
  </section>
</Base>
