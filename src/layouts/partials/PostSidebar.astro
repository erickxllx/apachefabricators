---
import ImageMod from "@/components/ImageMod.astro";
import config from "@/config/config.json";
import dateFormat from "@/lib/utils/dateFormat";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";

type Props = {
  tags: { name: string; slug: string }[];
  allCategories: { name: string; slug: string }[];
  categories: { name: string; slug: string }[];
  class?: string;
  sortedPosts: CollectionEntry<"blog">[];
};

const {
  tags,
  categories,
  allCategories,
  class: className,
  sortedPosts,
} = Astro.props;
---

<aside class={`lg:col-4${className ? ` ` + className : ""}`}>
  <div class="flex flex-col gap-10 lg:gap-14">
    {
      categories && categories[0] && (
        <div>
          <h2 class="h5 mb-6">Categories</h2>
          <ul class="[&>li:last-child>a]:pb-0 [&>li:first-child>a]:pt-0 [&>li:not(:last-child)>a]:border-b [&>li:not(:last-child)>a]:border-border">
            {categories.map(({ name, slug }) => {
              const count = allCategories
                ? allCategories.filter((c) => c.slug === slug).length
                : "";

              return (
                <li>
                  <a
                    class="flex py-3 text-base justify-between hover:text-primary "
                    href={`/categories/${slug}`}>
                    {name}

                    {count && <span set:html={count} />}
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      )
    }

    {
      tags && tags[0] && (
        <div>
          <h2 class="h5 mb-6">Tags</h2>
          <ul class="flex flex-wrap gap-2">
            {tags.map(({ name, slug }) => {
              return (
                <li class="inline-block">
                  <a
                    class="block px-4 py-1.5 border border-border rounded-full hover:bg-primary hover:text-white"
                    href={`/tags/${slug}`}>
                    {name}
                  </a>
                </li>
              );
            })}
          </ul>
        </div>
      )
    }

    {
      sortedPosts && sortedPosts[0] && (
        <div>
          <h2 class="h5 mb-6">Recent News</h2>
          <ul class="flex flex-col gap-5 gap-y-5 [&>li:not(:last-child)]:pb-5 [&>li:not(:last-child)]:border-b [&>li:not(:last-child)]:border-border">
            {sortedPosts
              .slice(0, 3)
              .map(({ id, data: { image, title, date } }) => {
                return (
                  <li class="flex gap-4">
                    <a
                      href={`/${config.settings.blog_folder}/${id}`}
                      class="block w-[100px] h-[80px]">
                      {image && (
                        <ImageMod
                          src={image}
                          class="rounded-lg h-full object-cover"
                          width={200}
                          height={180}
                          alt={title ? title : "blog image"}
                        />
                      )}
                    </a>
                    <div>
                      {title && (
                        <h6>
                          <a
                            href={`/${config.settings.blog_folder}/${id}`}
                            set:html={markdownify(title)}
                          />
                        </h6>
                      )}
                      {date && <p set:html={dateFormat(date)} />}
                    </div>
                  </li>
                );
              })}
          </ul>
        </div>
      )
    }

    {
      config.subscription_in_blog_sidebar &&
        config.subscription_in_blog_sidebar.enable && (
          <div>
            <h3
              class="mb-5 h5"
              set:html={markdownify(config.subscription_in_blog_sidebar.title)}
            />
            <form
              action={config.subscription_in_blog_sidebar.mailchimp_form_action}
              method="post"
              target="_blank"
              id="mc-embedded-subscribe-form"
              name="mc-embedded-subscribe-form"
              novalidate
              class="row gy-3">
              <div class="lg:col-12">
                <input
                  type="email"
                  class="form-input"
                  name="email"
                  id="email"
                  placeholder="Email"
                  required
                />
              </div>
              <div class="lg:col-12">
                <input
                  type="text"
                  class="form-input"
                  name="first-name"
                  id="first-name"
                  placeholder="First Name"
                  required
                />
              </div>
              <div class="lg:col-12">
                <input
                  type="text"
                  class="form-input"
                  name="last-name"
                  id="last-name"
                  placeholder="Last Name"
                  required
                />
              </div>
              <div class="lg:col-12">
                <button
                  class="btn btn-primary cursor-pointer"
                  type="submit"
                  aria-label="Subscribe"
                  set:html="Subscribe"
                />
                <div class="absolute left-[-5000px]" aria-hidden="true">
                  <input
                    type="text"
                    tabindex="-1"
                    name={config.subscription_in_footer.mailchimp_form_name}
                  />
                </div>
              </div>
            </form>
          </div>
        )
    }
  </div>
</aside>
