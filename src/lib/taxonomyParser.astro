---
import { getSinglePage } from "./contentParser.astro";
import { slugify } from "./utils/textConverter";

// get all taxonomies from frontmatter
export const getTaxonomy = async (collection: any, name: string) => {
  const singlePages = await getSinglePage(collection);

  const uniqueTaxonomies = new Map<string, { name: string; slug: string }>();

  singlePages.forEach((page: any) => {
    const taxonomyPages = page.data[name] || [];

    taxonomyPages.forEach((category: string) => {
      const slug = slugify(category);
      uniqueTaxonomies.set(category, { name: category, slug });
    });
  });

  return Array.from(uniqueTaxonomies.values());
};

export const getAllTaxonomy = async (collection: any, name: string) => {
  const singlePages = await getSinglePage(collection);

  const taxonomies = singlePages
    .map(
      (page: any) =>
        (page.data && page.data[name] ? page.data[name] : []) as string[],
    )
    .reduce(
      (acc: string[], categoryArray: string[]) => acc.concat(categoryArray),
      [],
    )
    .map((category: string) => ({
      name: category,
      slug: slugify(category),
    }));

  return taxonomies;
};
---
